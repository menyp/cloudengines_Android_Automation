<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="SGMacBookPROs-MacBook-Pro.local" name="com.pp.android.auto.SanityAndroid" tests="1" failures="1" timestamp="30 Mar 2015 14:05:57 GMT" time="4274.488" errors="0">
  <testcase name="badCredentials" time="4274.488" classname="com.pp.android.auto.SanityAndroid">
    <failure type="org.openqa.selenium.WebDriverException" message="An unknown server-side error occurred while processing the command. (Original error: Command failed: /bin/sh -c /Users/sgmacbookpro/Appium/sdk/platform-tools/adb -s 0149A91D0F01C00D &quot;shell \&quot;/system/bin/rm /data/local/tmp/screenshot.png; /system/bin/screencap -p /data/local/tmp/screenshot.png \&quot;&quot;
Android Debug Bridge version 1.0.32

 -a                            - directs adb to listen on all interfaces for a connection
 -d                            - directs command to the only connected USB device
                                 returns an error if more than one USB device is present.
 -e                            - directs command to the only running emulator.
                                 returns an error if more than one emulator is running.
 -s &lt;specific device&gt;          - directs command to the device or emulator with the given
                                 serial number or qualifier. Overrides ANDROID_SERIAL
                                 environment variable.
 -p &lt;product name or path&gt;     - simple product name like &#039;sooner&#039;, or
                                 a relative/absolute path to a product
                                 out directory like &#039;out/target/product/sooner&#039;.
                                 If -p is not specified, the ANDROID_PRODUCT_OUT
                                 environment variable is used, which must
                                 be an absolute path.
 -H                            - Name of adb server host (default: localhost)
 -P                            - Port of adb server (default: 5037)
 devices [-l]                  - list all connected devices
                                 (&#039;-l&#039; will also list device qualifiers)
 connect &lt;host&gt;[:&lt;port&gt;]       - connect to a device via TCP/IP
                                 Port 5555 is used by default if no port number is specified.
 disconnect [&lt;host&gt;[:&lt;port&gt;]]  - disconnect from a TCP/IP device.
                                 Port 5555 is used by default if no port number is specified.
                                 Using this command with no additional arguments
                                 will disconnect from all connected TCP/IP devices.

device commands:
  adb push [-p] &lt;local&gt; &lt;remote&gt;
                               - copy file/dir to device
                                 (&#039;-p&#039; to display the transfer progress)
  adb pull [-p] [-a] &lt;remote&gt; [&lt;local&gt;]
                               - copy file/dir from device
                                 (&#039;-p&#039; to display the transfer progress)
                                 (&#039;-a&#039; means copy timestamp and mode)
  adb sync [ &lt;directory&gt; ]     - copy host-&gt;device only if changed
                                 (-l means list but don&#039;t copy)
                                 (see &#039;adb help all&#039;)
  adb shell                    - run remote shell interactively
  adb shell &lt;command&gt;          - run remote shell command
  adb emu &lt;command&gt;            - run emulator console command
  adb logcat [ &lt;filter-spec&gt; ] - View device log
  adb forward --list           - list all forward socket connections.
                                 the format is a list of lines with the following format:
                                    &lt;serial&gt; &quot; &quot; &lt;local&gt; &quot; &quot; &lt;remote&gt; &quot;\n&quot;
  adb forward &lt;local&gt; &lt;remote&gt; - forward socket connections
                                 forward specs are one of: 
                                   tcp:&lt;port&gt;
                                   localabstract:&lt;unix domain socket name&gt;
                                   localreserved:&lt;unix domain socket name&gt;
                                   localfilesystem:&lt;unix domain socket name&gt;
                                   dev:&lt;character device name&gt;
                                   jdwp:&lt;process pid&gt; (remote only)
  adb forward --no-rebind &lt;local&gt; &lt;remote&gt;
                               - same as &#039;adb forward &lt;local&gt; &lt;remote&gt;&#039; but fails
                                 if &lt;local&gt; is already forwarded
  adb forward --remove &lt;local&gt; - remove a specific forward socket connection
  adb forward --remove-all     - remove all forward socket connections
  adb reverse --list           - list all reverse socket connections from device
  adb reverse &lt;remote&gt; &lt;local&gt; - reverse socket connections
                                 reverse specs are one of:
                                   tcp:&lt;port&gt;
                                   localabstract:&lt;unix domain socket name&gt;
                                   localreserved:&lt;unix domain socket name&gt;
                                   localfilesystem:&lt;unix domain socket name&gt;
  adb reverse --norebind &lt;remote&gt; &lt;local&gt;
                               - same as &#039;adb reverse &lt;remote&gt; &lt;local&gt;&#039; but fails
                                 if &lt;remote&gt; is already reversed.
  adb reverse --remove &lt;remote&gt;
                               - remove a specific reversed socket connection
  adb reverse --remove-all     - remove all reversed socket connections from device
  adb jdwp                     - list PIDs of processes hosting a JDWP transport
  adb install [-lrtsd] &lt;file&gt;
  adb install-multiple [-lrtsdp] &lt;file...&gt;
                               - push this package file to the device and install it
                                 (-l: forward lock application)
                                 (-r: replace existing application)
                                 (-t: allow test packages)
                                 (-s: install application on sdcard)
                                 (-d: allow version code downgrade)
                                 (-p: partial application install)
  adb uninstall [-k] &lt;package&gt; - remove this app package from the device
                                 (&#039;-k&#039; means keep the data and cache directories)
  adb bugreport                - return all information from the device
                                 that should be included in a bug report.

  adb backup [-f &lt;file&gt;] [-apk|-noapk] [-obb|-noobb] [-shared|-noshared] [-all] [-system|-nosystem] [&lt;packages...&gt;]
                               - write an archive of the device&#039;s data to &lt;file&gt;.
                                 If no -f option is supplied then the data is written
                                 to &quot;backup.ab&quot; in the current directory.
                                 (-apk|-noapk enable/disable backup of the .apks themselves
                                    in the archive; the default is noapk.)
                                 (-obb|-noobb enable/disable backup of any installed apk expansion
                                    (aka .obb) files associated with each application; the default
                                    is noobb.)
                                 (-shared|-noshared enable/disable backup of the device&#039;s
                                    shared storage / SD card contents; the default is noshared.)
                                 (-all means to back up all installed applications)
                                 (-system|-nosystem toggles whether -all automatically includes
                                    system applications; the default is to include system apps)
                                 (&lt;packages...&gt; is the list of applications to be backed up.  If
                                    the -all or -shared flags are passed, then the package
                                    list is optional.  Applications explicitly given on the
                                    command line will be included even if -nosystem would
                                    ordinarily cause them to be omitted.)

  adb restore &lt;file&gt;           - restore device contents from the &lt;file&gt; backup archive

  adb help                     - show this help message
  adb version                  - show version num

scripting:
  adb wait-for-device          - block until device is online
  adb start-server             - ensure that there is a server running
  adb kill-server              - kill the server if it is running
  adb get-state                - prints: offline | bootloader | device
  adb get-serialno             - prints: &lt;serial-number&gt;
  adb get-devpath              - prints: &lt;device-path&gt;
  adb status-window            - continuously print device status for a specified device
  adb remount                  - remounts the /system and /vendor (if present) partitions on the device read-write
  adb reboot [bootloader|recovery] - reboots the device, optionally into the bootloader or recovery program
  adb reboot-bootloader        - reboots the device into the bootloader
  adb root                     - restarts the adbd daemon with root permissions
  adb usb                      - restarts the adbd daemon listening on USB
  adb tcpip &lt;port&gt;             - restarts the adbd daemon listening on TCP on the specified port
networking:
  adb ppp &lt;tty&gt; [parameters]   - Run PPP over USB.
 Note: you should not automatically start a PPP connection.
 &lt;tty&gt; refers to the tty for PPP stream. Eg. dev:/dev/omap_csmi_tty1
 [parameters] - Eg. defaultroute debug dump local notty usepeerdns

adb sync notes: adb sync [ &lt;directory&gt; ]
  &lt;localdir&gt; can be interpreted in several ways:

  - If &lt;directory&gt; is not specified, /system, /vendor (if present), and /data partitions will be updated.

  - If it is &quot;system&quot;, &quot;vendor&quot; or &quot;data&quot;, only the corresponding partition
    is updated.

environmental variables:
  ADB_TRACE                    - Print debug information. A comma separated list of the following values
                                 1 or all, adb, sockets, packets, rwx, usb, sync, sysdeps, transport, jdwp
  ANDROID_SERIAL               - The serial number to connect to. -s takes priority over this if given.
  ANDROID_LOG_TAGS             - When used with the logcat option, only these debug tags are printed.
) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 4206.74 seconds
Build info: version: &#039;2.44.0&#039;, revision: &#039;76d78cf323ce037c5f92db6c1bba601c2ac43ad8&#039;, time: &#039;2014-10-23 13:11:40&#039;
System info: host: &#039;SGMacBookPROs-MacBook-Pro.local&#039;, ip: &#039;127.0.0.1&#039;, os.name: &#039;Mac OS X&#039;, os.arch: &#039;x86_64&#039;, os.version: &#039;10.9.5&#039;, java.version: &#039;1.8.0_40&#039;
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities [{app=/Users/sgmacbookpro/Appium/Android/pogoplug.apk, appPackage=com.pogoplug.android, networkConnectionEnabled=true, warnings={}, appWaitActivity=com.pogoplug.android.login.ui.IntroPage, databaseEnabled=false, version=, deviceName=Galaxy Nexus1, platform=ANDROID, appActivity=com.pogoplug.android.login.Splash, desired={app=/Users/sgmacbookpro/Appium/Android/pogoplug.apk, appPackage=com.pogoplug.android, appActivity=com.pogoplug.android.login.Splash, appium-version=1.3.4, platformVersion=4.2.2, appWaitActivity=com.pogoplug.android.login.ui.IntroPage, browserName=android, platformName=Android, version=, deviceName=Galaxy Nexus1, platform=ANDROID}, appium-version=1.3.4, platformVersion=4.2.2, webStorageEnabled=false, locationContextEnabled=false, browserName=android, takesScreenshot=true, javascriptEnabled=true, platformName=Android}]
Session ID: 7e5a2d60-f994-4c04-b1e4-0dfe807e5d11">
      <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. (Original error: Command failed: /bin/sh -c /Users/sgmacbookpro/Appium/sdk/platform-tools/adb -s 0149A91D0F01C00D "shell \"/system/bin/rm /data/local/tmp/screenshot.png; /system/bin/screencap -p /data/local/tmp/screenshot.png \""
Android Debug Bridge version 1.0.32

 -a                            - directs adb to listen on all interfaces for a connection
 -d                            - directs command to the only connected USB device
                                 returns an error if more than one USB device is present.
 -e                            - directs command to the only running emulator.
                                 returns an error if more than one emulator is running.
 -s <specific device>          - directs command to the device or emulator with the given
                                 serial number or qualifier. Overrides ANDROID_SERIAL
                                 environment variable.
 -p <product name or path>     - simple product name like 'sooner', or
                                 a relative/absolute path to a product
                                 out directory like 'out/target/product/sooner'.
                                 If -p is not specified, the ANDROID_PRODUCT_OUT
                                 environment variable is used, which must
                                 be an absolute path.
 -H                            - Name of adb server host (default: localhost)
 -P                            - Port of adb server (default: 5037)
 devices [-l]                  - list all connected devices
                                 ('-l' will also list device qualifiers)
 connect <host>[:<port>]       - connect to a device via TCP/IP
                                 Port 5555 is used by default if no port number is specified.
 disconnect [<host>[:<port>]]  - disconnect from a TCP/IP device.
                                 Port 5555 is used by default if no port number is specified.
                                 Using this command with no additional arguments
                                 will disconnect from all connected TCP/IP devices.

device commands:
  adb push [-p] <local> <remote>
                               - copy file/dir to device
                                 ('-p' to display the transfer progress)
  adb pull [-p] [-a] <remote> [<local>]
                               - copy file/dir from device
                                 ('-p' to display the transfer progress)
                                 ('-a' means copy timestamp and mode)
  adb sync [ <directory> ]     - copy host->device only if changed
                                 (-l means list but don't copy)
                                 (see 'adb help all')
  adb shell                    - run remote shell interactively
  adb shell <command>          - run remote shell command
  adb emu <command>            - run emulator console command
  adb logcat [ <filter-spec> ] - View device log
  adb forward --list           - list all forward socket connections.
                                 the format is a list of lines with the following format:
                                    <serial> " " <local> " " <remote> "\n"
  adb forward <local> <remote> - forward socket connections
                                 forward specs are one of: 
                                   tcp:<port>
                                   localabstract:<unix domain socket name>
                                   localreserved:<unix domain socket name>
                                   localfilesystem:<unix domain socket name>
                                   dev:<character device name>
                                   jdwp:<process pid> (remote only)
  adb forward --no-rebind <local> <remote>
                               - same as 'adb forward <local> <remote>' but fails
                                 if <local> is already forwarded
  adb forward --remove <local> - remove a specific forward socket connection
  adb forward --remove-all     - remove all forward socket connections
  adb reverse --list           - list all reverse socket connections from device
  adb reverse <remote> <local> - reverse socket connections
                                 reverse specs are one of:
                                   tcp:<port>
                                   localabstract:<unix domain socket name>
                                   localreserved:<unix domain socket name>
                                   localfilesystem:<unix domain socket name>
  adb reverse --norebind <remote> <local>
                               - same as 'adb reverse <remote> <local>' but fails
                                 if <remote> is already reversed.
  adb reverse --remove <remote>
                               - remove a specific reversed socket connection
  adb reverse --remove-all     - remove all reversed socket connections from device
  adb jdwp                     - list PIDs of processes hosting a JDWP transport
  adb install [-lrtsd] <file>
  adb install-multiple [-lrtsdp] <file...>
                               - push this package file to the device and install it
                                 (-l: forward lock application)
                                 (-r: replace existing application)
                                 (-t: allow test packages)
                                 (-s: install application on sdcard)
                                 (-d: allow version code downgrade)
                                 (-p: partial application install)
  adb uninstall [-k] <package> - remove this app package from the device
                                 ('-k' means keep the data and cache directories)
  adb bugreport                - return all information from the device
                                 that should be included in a bug report.

  adb backup [-f <file>] [-apk|-noapk] [-obb|-noobb] [-shared|-noshared] [-all] [-system|-nosystem] [<packages...>]
                               - write an archive of the device's data to <file>.
                                 If no -f option is supplied then the data is written
                                 to "backup.ab" in the current directory.
                                 (-apk|-noapk enable/disable backup of the .apks themselves
                                    in the archive; the default is noapk.)
                                 (-obb|-noobb enable/disable backup of any installed apk expansion
                                    (aka .obb) files associated with each application; the default
                                    is noobb.)
                                 (-shared|-noshared enable/disable backup of the device's
                                    shared storage / SD card contents; the default is noshared.)
                                 (-all means to back up all installed applications)
                                 (-system|-nosystem toggles whether -all automatically includes
                                    system applications; the default is to include system apps)
                                 (<packages...> is the list of applications to be backed up.  If
                                    the -all or -shared flags are passed, then the package
                                    list is optional.  Applications explicitly given on the
                                    command line will be included even if -nosystem would
                                    ordinarily cause them to be omitted.)

  adb restore <file>           - restore device contents from the <file> backup archive

  adb help                     - show this help message
  adb version                  - show version num

scripting:
  adb wait-for-device          - block until device is online
  adb start-server             - ensure that there is a server running
  adb kill-server              - kill the server if it is running
  adb get-state                - prints: offline | bootloader | device
  adb get-serialno             - prints: <serial-number>
  adb get-devpath              - prints: <device-path>
  adb status-window            - continuously print device status for a specified device
  adb remount                  - remounts the /system and /vendor (if present) partitions on the device read-write
  adb reboot [bootloader|recovery] - reboots the device, optionally into the bootloader or recovery program
  adb reboot-bootloader        - reboots the device into the bootloader
  adb root                     - restarts the adbd daemon with root permissions
  adb usb                      - restarts the adbd daemon listening on USB
  adb tcpip <port>             - restarts the adbd daemon listening on TCP on the specified port
networking:
  adb ppp <tty> [parameters]   - Run PPP over USB.
 Note: you should not automatically start a PPP connection.
 <tty> refers to the tty for PPP stream. Eg. dev:/dev/omap_csmi_tty1
 [parameters] - Eg. defaultroute debug dump local notty usepeerdns

adb sync notes: adb sync [ <directory> ]
  <localdir> can be interpreted in several ways:

  - If <directory> is not specified, /system, /vendor (if present), and /data partitions will be updated.

  - If it is "system", "vendor" or "data", only the corresponding partition
    is updated.

environmental variables:
  ADB_TRACE                    - Print debug information. A comma separated list of the following values
                                 1 or all, adb, sockets, packets, rwx, usb, sync, sysdeps, transport, jdwp
  ANDROID_SERIAL               - The serial number to connect to. -s takes priority over this if given.
  ANDROID_LOG_TAGS             - When used with the logcat option, only these debug tags are printed.
) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 4206.74 seconds
Build info: version: '2.44.0', revision: '76d78cf323ce037c5f92db6c1bba601c2ac43ad8', time: '2014-10-23 13:11:40'
System info: host: 'SGMacBookPROs-MacBook-Pro.local', ip: '127.0.0.1', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.9.5', java.version: '1.8.0_40'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities [{app=/Users/sgmacbookpro/Appium/Android/pogoplug.apk, appPackage=com.pogoplug.android, networkConnectionEnabled=true, warnings={}, appWaitActivity=com.pogoplug.android.login.ui.IntroPage, databaseEnabled=false, version=, deviceName=Galaxy Nexus1, platform=ANDROID, appActivity=com.pogoplug.android.login.Splash, desired={app=/Users/sgmacbookpro/Appium/Android/pogoplug.apk, appPackage=com.pogoplug.android, appActivity=com.pogoplug.android.login.Splash, appium-version=1.3.4, platformVersion=4.2.2, appWaitActivity=com.pogoplug.android.login.ui.IntroPage, browserName=android, platformName=Android, version=, deviceName=Galaxy Nexus1, platform=ANDROID}, appium-version=1.3.4, platformVersion=4.2.2, webStorageEnabled=false, locationContextEnabled=false, browserName=android, takesScreenshot=true, javascriptEnabled=true, platformName=Android}]
Session ID: 7e5a2d60-f994-4c04-b1e4-0dfe807e5d11
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:204)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:156)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:599)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:180)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:185)
	at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:324)
	at com.pp.android.auto.AndroidGenericMethods.takeScreenShot(AndroidGenericMethods.java:296)
	at com.pp.android.auto.AndroidGenericMethods.isElementVisible(AndroidGenericMethods.java:1030)
	at com.pp.android.auto.SanityAndroid.badCredentials(SanityAndroid.java:481)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
    </failure>
  </testcase> <!-- badCredentials -->
</testsuite> <!-- com.pp.android.auto.SanityAndroid -->
